interface ContentOverview {
    video_id: ID!
    content_title: String!
    miniature_img: String!
    continue_watching_url: String!
}

type SearchResults implements ContentOverview {
    # ContentOverview
    video_id: ID!
    content_title: String!
    miniature_img: String!
    continue_watching_url: String!
}

interface ContentDetails {    
    video_id: ID!    
    banner_img: String!
    percentage_of_coincidence: String
    year: Int
    player_feature_badge: String
    description: String!
    created_by: [String]
    cast: [String]
    scriptwriter: [String]
    genres: [String]
    belongs_to: [String]
    age_rating: String
    age_rating_reason: [String]
    maturity_description: String
}

union SimilarContent = SimilarMovie | SimilarTvShow

interface SimilarDetails {
    video_id: ID!
    banner_img: String
    percentage_of_coincidence: String
    age_rating: String
    year: Int
    description: String    
}

type SimilarMovie implements SimilarDetails {
    # SimilarDetails
    video_id: ID!
    banner_img: String
    percentage_of_coincidence: String
    age_rating: String
    year: Int
    description: String 
    # SimilarMovie
    content_duration: String
}

type SimilarTvShow implements SimilarDetails {
    # SimilarDetails
    video_id: ID!
    banner_img: String
    percentage_of_coincidence: String
    age_rating: String
    year: Int
    description: String 
    # SimilarTvShow
    number_of_seasons: Int
}

type MovieDetails implements ContentDetails {   
    # ContentDetails
    video_id: ID!
    banner_img: String!
    percentage_of_coincidence: String
    year: Int
    player_feature_badge: String
    description: String!
    created_by: [String]
    cast: [String]
    scriptwriter: [String]
    genres: [String]
    belongs_to: [String]
    age_rating: String
    age_rating_reason: [String]
    maturity_description: String
    # Movie
    content_duration: String  
    similars: [SimilarContent]  
}

type Episode {
    episode_index: String
    episode_title: String
    episode_duration: String
    episode_description: String
    episode_watch_url: String
}

type Season {
    season_title: String!
    episodes: [Episode]
}

type TvShowDetails implements ContentDetails {   
    # ContentDetails
    video_id: ID!
    banner_img: String!
    percentage_of_coincidence: String
    year: Int
    player_feature_badge: String
    description: String!
    created_by: [String]
    cast: [String]
    scriptwriter: [String]
    genres: [String]
    belongs_to: [String]
    age_rating: String
    age_rating_reason: [String]
    maturity_description: String
    # TvShow
    number_of_seasons: Int
    seasons: [Season]
    similars: [SimilarContent]
}

type Query {
  "Return all movies and tv-shows"
  getAll: [SearchResults]
  "Return all movies and tv-shows that matches with certain keyword"
  getSearchResults(offset: Int, limit: Int, keyword: String!): [SearchResults]  
  "Return the details of a specific movie or tv-show by ID"  
  getSearchDetails(video_id: ID!): ContentDetails
}
